<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2013 Inera AB (http://www.inera.se)

    This file is part of Inera Axel (http://code.google.com/p/inera-axel).

    Inera Axel is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Inera Axel is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>

-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:cxf="http://cxf.apache.org/core"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:ehcache="http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring"
       xmlns:jaxrs="http://cxf.apache.org/jaxrs"
       xsi:schemaLocation="http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd
	   http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring/ehcache-spring-1.2.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd">

	<ehcache:annotation-driven cache-manager="ehCacheManager" default-cache-resolver-factory="cacheResolverFactory" create-missing-caches="false" />

	<!-- The ehcache-annotations project has problems with ehcache in OSGi. -->
	<!-- Needs this patched cacheResolverFactory -->
	<bean id="cacheResolverFactory"	class="se.inera.axel.shs.broker.directory.internal.ExtDefaultCacheResolverFactory">
		<constructor-arg ref="ehCacheManager" />
	</bean>

	<bean id="ehCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="${shs.ldap.ehcache.config.location}" />
	</bean>

    <bean id="mbeanServer" class="org.springframework.jmx.support.MBeanServerFactoryBean">
        <property name="locateExistingServerIfPossible" value="true" />
    </bean>

    <bean class="net.sf.ehcache.management.ManagementService" init-method="init">
        <constructor-arg ref="ehCacheManager" />
        <constructor-arg ref="mbeanServer" />
        <constructor-arg value="true" />
        <constructor-arg value="true" />
        <constructor-arg value="true" />
        <constructor-arg value="true" />
    </bean>

	<bean id="directoryService" class="se.inera.axel.shs.broker.directory.internal.DirectoryServiceGateway">
		<property name="directoryServices">
            <bean factory-method="getDirectoryServices" class="se.inera.axel.shs.broker.directory.internal.DirectoryServiceFactory">
                <constructor-arg ref="ldapProps" />
            </bean>
        </property>
	</bean>

    <bean id="directoryAdminServiceRegistry" factory-method="createDirectoryAdminServiceRegistry" class="se.inera.axel.shs.broker.directory.internal.DirectoryServiceFactory">
        <constructor-arg ref="ldapProps" />
    </bean>

    <bean id="directoryResource" class="se.inera.axel.shs.broker.directory.internal.rest.DirectoryResource">
        <property name="directoryAdminServiceRegistry" ref="directoryAdminServiceRegistry" />
    </bean>

    <bean id="ldapProps" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="singleton" value="true" />
        <property name="properties">
            <props>
                <prop key="shs.ldap.url">${shs.ldap.url}</prop>
                <prop key="shs.ldap.userDn">${shs.ldap.userDn}</prop>
                <prop key="shs.ldap.password">${shs.ldap.password}</prop>
                <prop key="shs.ldap.admin.url">${shs.ldap.admin.url}</prop>
                <prop key="shs.ldap.admin.userDn">${shs.ldap.admin.userDn}</prop>
                <prop key="shs.ldap.admin.password">${shs.ldap.admin.password}</prop>
                <prop key="shs.ldap.connect.pool.initsize">${shs.ldap.connect.pool.initsize}</prop>
                <prop key="shs.ldap.connect.pool.maxsize">${shs.ldap.connect.pool.maxsize}</prop>
                <prop key="shs.ldap.connect.pool.prefsize">${shs.ldap.connect.pool.prefsize}</prop>
                <prop key="shs.ldap.connect.pool.timeout">${shs.ldap.connect.pool.timeout}</prop>
                <prop key="shs.ldap.ehcache.config.location">${shs.ldap.ehcache.config.location}</prop>
                <prop key="shs.ldap.baseEnvironmentProperties.com.sun.jndi.ldap.connect.timeout">
                    ${shs.ldap.baseEnvironmentProperties.com.sun.jndi.ldap.connect.timeout}
                </prop>
                <prop key="shs.ldap.baseEnvironmentProperties.com.sun.jndi.ldap.read.timeout">
                    ${shs.ldap.baseEnvironmentProperties.com.sun.jndi.ldap.read.timeout}
                </prop>

                <prop key="shs.ldap.2.url">${shs.ldap.2.url:}</prop>
                <prop key="shs.ldap.2.userDn">${shs.ldap.2.userDn:}</prop>
                <prop key="shs.ldap.2.password">${shs.ldap.2.password:}</prop>
                <prop key="shs.ldap.admin.2.url">${shs.ldap.admin.2.url:}</prop>
                <prop key="shs.ldap.admin.2.userDn">${shs.ldap.admin.2.userDn:}</prop>
                <prop key="shs.ldap.admin.2.password">${shs.ldap.admin.2.password:}</prop>

                <prop key="shs.ldap.3.url">${shs.ldap.3.url:}</prop>
                <prop key="shs.ldap.3.userDn">${shs.ldap.3.userDn:}</prop>
                <prop key="shs.ldap.3.password">${shs.ldap.3.password:}</prop>
                <prop key="shs.ldap.admin.3.url">${shs.ldap.admin.3.url:}</prop>
                <prop key="shs.ldap.admin.3.userDn">${shs.ldap.admin.3.userDn:}</prop>
                <prop key="shs.ldap.admin.3.password">${shs.ldap.admin.3.password:}</prop>
            </props>
        </property>
    </bean>

    <jaxrs:server id="directoryAdminRestService" address="/admin/directory">
        <jaxrs:features>
            <cxf:logging/>
        </jaxrs:features>
        <jaxrs:serviceBeans>
            <ref bean="directoryResource" />
        </jaxrs:serviceBeans>
    </jaxrs:server>

</beans>
