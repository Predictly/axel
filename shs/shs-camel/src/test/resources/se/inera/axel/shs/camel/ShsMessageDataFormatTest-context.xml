<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2013 Inera AB (http://www.inera.se)

    This file is part of Inera Axel (http://code.google.com/p/inera-axel).

    Inera Axel is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Inera Axel is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>

-->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:camel="http://camel.apache.org/schema/spring"
    xmlns:ctx="http://www.springframework.org/schema/context"
    xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
       ">

	<bean id="shsMarshaller" class="se.inera.axel.shs.camel.ShsMessageDataFormat" />

    <camel:camelContext xmlns="http://camel.apache.org/schema/spring" id="camel-test">
    	<route>
    		<from uri="direct:marshal" />
    		<marshal ref="shsMarshaller" />
    		<to uri="log:se.inera.axel.shs.camel?showAll=true" />
    		<to uri="mock:testResult" />
    	</route>

    	<route>
    		<from uri="direct:unmarshal" />
    		<unmarshal ref="shsMarshaller" />
    		<to uri="log:se.inera.axel.shs.camel?showAll=true" />
    		<to uri="mock:testResult" />
    	</route>

        <route>
            <from uri="direct:unmarshalRoundtrip" />
            <unmarshal ref="shsMarshaller" />
            <to uri="log:se.inera.axel.shs.camel?showAll=true" />
            <to uri="direct-vm:dvm" />
        </route>

        <route>
            <from uri="direct-vm:dvm" />
            <to uri="log:se.inera.axel.shs.camel?showAll=true" />
            <marshal ref="shsMarshaller" />
            <to uri="log:se.inera.axel.shs.camel?showAll=true" />
            <unmarshal ref="shsMarshaller" />
            <to uri="log:se.inera.axel.shs.camel?showAll=true" />
            <marshal ref="shsMarshaller" />
            <to uri="mock:testResult" />
        </route>


        <route>
    		<from uri="direct:marshalRoundtrip" />
    		<marshal ref="shsMarshaller" />
    		<to uri="log:se.inera.axel.shs.camel?showAll=true" />
    		<unmarshal ref="shsMarshaller" />
    		<to uri="mock:testResult" />
    	</route>


    </camel:camelContext>
</beans>
