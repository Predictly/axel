<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2013 Inera AB (http://www.inera.se)

    This file is part of Inera Axel (http://code.google.com/p/inera-axel).

    Inera Axel is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Inera Axel is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>

-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ctx="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		">
    <ctx:mbean-export/>
    <ctx:mbean-server/>

    <bean id="axelHealthView" class="se.inera.axel.monitoring.AxelHealthView" autowire="constructor">
    </bean>

    <bean id="deliveryServiceHealthCheck" class="se.inera.axel.monitoring.HealthCheck">
        <constructor-arg value="se.inera.axel.camelRoute.deliveryService" />
        <constructor-arg>
            <value>org.apache.camel:context=*/shs-deliveryservice,type=routes,name="/shs/ds"</value>
        </constructor-arg>
        <constructor-arg>
            <map>
                <entry key="State" value="Started" />
            </map>
        </constructor-arg>
    </bean>

    <bean id="receiveServiceHealthCheck" class="se.inera.axel.monitoring.HealthCheck">
        <constructor-arg value="se.inera.axel.camelRoute.receiveService" />
        <constructor-arg>
            <value>org.apache.camel:context=*/shs-receiveservice,type=routes,name="/shs/rs"</value>
        </constructor-arg>
        <constructor-arg>
            <map>
                <entry key="State" value="Started" />
            </map>
        </constructor-arg>
    </bean>


    <bean id="riv2shsHealthCheck" class="se.inera.axel.monitoring.HealthCheck">
        <constructor-arg value="se.inera.axel.camelRoute.riv2shs" />
        <constructor-arg>
            <value>org.apache.camel:context=*/riv-shs,type=routes,name="riv2shs"</value>
        </constructor-arg>
        <constructor-arg>
            <map>
                <entry key="State" value="Started" />
            </map>
        </constructor-arg>
    </bean>


    <bean id="shs2rivHealthCheck" class="se.inera.axel.monitoring.HealthCheck">
        <constructor-arg value="se.inera.axel.camelRoute.shs2riv" />
        <constructor-arg>
            <value>org.apache.camel:context=*/riv-shs,type=routes,name="shs2riv"</value>
        </constructor-arg>
        <constructor-arg>
            <map>
                <entry key="State" value="Started" />
            </map>
        </constructor-arg>
    </bean>


    <bean id="shsPingHealthCheck" class="se.inera.axel.monitoring.HealthCheck">
        <constructor-arg value="se.inera.axel.camelRoute.shsPing" />
        <constructor-arg>
            <value>org.apache.camel:context=*/shs-ping,type=routes,name="shsPing"</value>
        </constructor-arg>
        <constructor-arg>
            <map>
                <entry key="State" value="Started" />
            </map>
        </constructor-arg>
    </bean>


    <bean id="archiveMessagesHealthCheck" class="se.inera.axel.monitoring.HealthCheck">
        <constructor-arg value="se.inera.axel.camelRoute.archiveMessages" />
        <constructor-arg>
            <value>org.apache.camel:context=*/shs-scheduler,type=routes,name="archiveMessages"</value>
        </constructor-arg>
        <constructor-arg>
            <map>
                <entry key="State" value="Started" />
            </map>
        </constructor-arg>
    </bean>

    <bean id="releaseStaleFetchingInProgressHealthCheck" class="se.inera.axel.monitoring.HealthCheck">
        <constructor-arg value="se.inera.axel.camelRoute.releaseStaleFetchingInProgress" />
        <constructor-arg>
            <value>org.apache.camel:context=*/shs-scheduler,type=routes,name="releaseStaleFetchingInProgress"</value>
        </constructor-arg>
        <constructor-arg>
            <map>
                <entry key="State" value="Started" />
            </map>
        </constructor-arg>
    </bean>


    <bean id="removeArchivedMessageEntriesHealthCheck" class="se.inera.axel.monitoring.HealthCheck">
        <constructor-arg value="se.inera.axel.camelRoute.removeArchivedMessageEntries" />
        <constructor-arg>
            <value>org.apache.camel:context=*/shs-scheduler,type=routes,name="removeArchivedMessageEntries"</value>
        </constructor-arg>
        <constructor-arg>
            <map>
                <entry key="State" value="Started" />
            </map>
        </constructor-arg>
    </bean>


    <bean id="removeArchivedMessagesHealthCheck" class="se.inera.axel.monitoring.HealthCheck">
        <constructor-arg value="se.inera.axel.camelRoute.removeArchivedMessages" />
        <constructor-arg>
            <value>org.apache.camel:context=*/shs-scheduler,type=routes,name="removeArchivedMessages"</value>
        </constructor-arg>
        <constructor-arg>
            <map>
                <entry key="State" value="Started" />
            </map>
        </constructor-arg>
    </bean>


    <bean id="removeSuccessfullyTransferredMessagesHealthCheck" class="se.inera.axel.monitoring.HealthCheck">
        <constructor-arg value="se.inera.axel.camelRoute.removeSuccessfullyTransferredMessages" />
        <constructor-arg>
            <value>org.apache.camel:context=*/shs-scheduler,type=routes,name="removeSuccessfullyTransferredMessages"</value>
        </constructor-arg>
        <constructor-arg>
            <map>
                <entry key="State" value="Started" />
            </map>
        </constructor-arg>
    </bean>

    <bean id="mongodbHealthCheck" class="se.inera.axel.monitoring.HealthCheck">
        <constructor-arg value="se.inera.axel.mongoDB" />
        <constructor-arg>
            <value>com.mongodb:type=ConnectionPool,*</value>
        </constructor-arg>
        <constructor-arg>
            <null></null>
        </constructor-arg>
    </bean>

    <bean id="ldapHealthCheck" class="se.inera.axel.monitoring.HealthCheck">
        <constructor-arg value="se.inera.axel.mongoDB" />
        <constructor-arg>
            <value>net.sf.ehcache:type=Cache,name=ldap,*</value>
        </constructor-arg>
        <constructor-arg>
            <null></null>
        </constructor-arg>
    </bean>

</beans>
